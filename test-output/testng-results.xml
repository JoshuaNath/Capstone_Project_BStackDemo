<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="23" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-08T14:19:38 IST" name="Complete Automation Suite" finished-at="2025-09-08T14:27:42 IST" duration-ms="484156">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-09-08T14:19:38 IST" name="UI Tests" finished-at="2025-09-08T14:25:08 IST" duration-ms="330823">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:03 IST" name="setUp" finished-at="2025-09-08T14:21:12 IST" duration-ms="8745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testEmptyPassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmptyPassword()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:12 IST" name="testEmptyPassword" finished-at="2025-09-08T14:21:14 IST" duration-ms="1723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:14 IST" name="tearDown" finished-at="2025-09-08T14:21:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:14 IST" name="setUp" finished-at="2025-09-08T14:21:22 IST" duration-ms="8586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testEmptyUsername() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmptyUsername()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:22 IST" name="testEmptyUsername" finished-at="2025-09-08T14:21:24 IST" duration-ms="2137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:24 IST" name="tearDown" finished-at="2025-09-08T14:21:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:24 IST" name="setUp" finished-at="2025-09-08T14:21:33 IST" duration-ms="8541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testLockedUser() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLockedUser()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:33 IST" name="testLockedUser" finished-at="2025-09-08T14:21:36 IST" duration-ms="2781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLockedUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:36 IST" name="tearDown" finished-at="2025-09-08T14:21:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:36 IST" name="setUp" finished-at="2025-09-08T14:21:46 IST" duration-ms="9843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testValidLogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidLogin(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:46 IST" name="testValidLogin" data-provider="validUsers" finished-at="2025-09-08T14:21:48 IST" duration-ms="2838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demouser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testingisfun99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:48 IST" name="setUp" finished-at="2025-09-08T14:21:56 IST" duration-ms="7999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testValidLogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:48 IST" name="tearDown" finished-at="2025-09-08T14:21:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testValidLogin(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:56 IST" name="testValidLogin" data-provider="validUsers" finished-at="2025-09-08T14:21:59 IST" duration-ms="2717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fav_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testingisfun99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:59 IST" name="tearDown" finished-at="2025-09-08T14:21:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:21:59 IST" name="setUp" finished-at="2025-09-08T14:22:08 IST" duration-ms="9072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testValidLogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidLogin(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:22:08 IST" name="testValidLogin" data-provider="validUsers" finished-at="2025-09-08T14:22:11 IST" duration-ms="2666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[image_not_loading_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testingisfun99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:22:11 IST" name="tearDown" finished-at="2025-09-08T14:22:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:22:11 IST" name="setUp" finished-at="2025-09-08T14:22:29 IST" duration-ms="18326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.testValidLogin(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidLogin(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:22:29 IST" name="testValidLogin" data-provider="validUsers" finished-at="2025-09-08T14:22:32 IST" duration-ms="2749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[existing_orders_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testingisfun99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:22:32 IST" name="tearDown" finished-at="2025-09-08T14:22:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.HomeTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:19:38 IST" name="setUp" finished-at="2025-09-08T14:19:49 IST" duration-ms="11136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOffersPage()[pri:1, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:19:49 IST" name="testOffersPage" finished-at="2025-09-08T14:19:54 IST" duration-ms="5538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffersPage -->
        <test-method signature="testOrdersPage()[pri:2, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:19:54 IST" name="testOrdersPage" finished-at="2025-09-08T14:20:00 IST" duration-ms="5449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrdersPage -->
        <test-method signature="testFavoritesPage()[pri:3, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:20:00 IST" name="testFavoritesPage" finished-at="2025-09-08T14:20:05 IST" duration-ms="5466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFavoritesPage -->
        <test-method signature="testGoToHomePage()[pri:4, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:20:05 IST" name="testGoToHomePage" finished-at="2025-09-08T14:20:11 IST" duration-ms="5473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoToHomePage -->
        <test-method signature="testSelectAllVendors()[pri:5, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:20:11 IST" name="testSelectAllVendors" finished-at="2025-09-08T14:20:32 IST" duration-ms="20885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectAllVendors -->
        <test-method signature="testSortProducts()[pri:6, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:20:32 IST" name="testSortProducts" finished-at="2025-09-08T14:21:03 IST" duration-ms="31491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortProducts -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.HomeTest@2002fc1d]" started-at="2025-09-08T14:21:03 IST" name="tearDown" finished-at="2025-09-08T14:21:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.HomeTest -->
      <class name="tests.WebTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WebTest@4988d8b8]" started-at="2025-09-08T14:22:32 IST" name="setUp" finished-at="2025-09-08T14:22:54 IST" duration-ms="22085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSamsungFavoriteFlow()[pri:1, instance:tests.WebTest@4988d8b8]" started-at="2025-09-08T14:22:54 IST" name="testSamsungFavoriteFlow" finished-at="2025-09-08T14:23:20 IST" duration-ms="25915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSamsungFavoriteFlow -->
        <test-method signature="testAppleFavoriteFlow()[pri:2, instance:tests.WebTest@4988d8b8]" started-at="2025-09-08T14:23:20 IST" name="testAppleFavoriteFlow" finished-at="2025-09-08T14:23:51 IST" duration-ms="31057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppleFavoriteFlow -->
        <test-method signature="testCartAndCheckoutFlow()[pri:3, instance:tests.WebTest@4988d8b8]" started-at="2025-09-08T14:23:51 IST" name="testCartAndCheckoutFlow" finished-at="2025-09-08T14:25:08 IST" duration-ms="77471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartAndCheckoutFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.WebTest@4988d8b8]" started-at="2025-09-08T14:25:08 IST" name="tearDown" finished-at="2025-09-08T14:25:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.WebTest -->
    </test> <!-- UI Tests -->
    <test started-at="2025-09-08T14:25:09 IST" name="Cucumber Features" finished-at="2025-09-08T14:27:42 IST" duration-ms="152574">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="initReports()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:19:37 IST" name="initReports" finished-at="2025-09-08T14:19:38 IST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReports -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:tests.LoginTest@63475ace]" started-at="2025-09-08T14:27:42 IST" name="flushReports" finished-at="2025-09-08T14:27:42 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- tests.LoginTest -->
      <class name="runners.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:25:09 IST" name="setUpClass" finished-at="2025-09-08T14:25:10 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@167bb934]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:25:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:25:21 IST" duration-ms="10999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:25:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:25:31 IST" duration-ms="9624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:25:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:25:45 IST" duration-ms="13777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:25:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:25:55 IST" duration-ms="10006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:25:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:26:06 IST" duration-ms="11181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Locked user should see locked message"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:26:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:27:29 IST" duration-ms="83408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with empty username should show message"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:27:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-08T14:27:42 IST" duration-ms="12473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with empty password should show message"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.TestRunner@71c3b41]" started-at="2025-09-08T14:27:42 IST" name="tearDownClass" finished-at="2025-09-08T14:27:42 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.TestRunner -->
    </test> <!-- Cucumber Features -->
  </suite> <!-- Complete Automation Suite -->
</testng-results>
